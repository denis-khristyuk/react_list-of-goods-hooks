{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","Button","variant","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,6DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mBAAAA,I,wBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKT,EAASa,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAE3C,KAAKnB,EAASQ,MAShB,OAJIF,GACFM,EAAaQ,UAGRR,EAQOS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,MAAf,SACIlB,EAUE,qCACE,cAACmB,EAAA,EAAD,CACEC,QACEf,IAAaT,EAASa,SAAY,YAAgB,WAEpDY,QAAS,kBAAMf,EAAYD,IAAaT,EAASa,SAC5Cb,EAASQ,KACTR,EAASa,WANhB,iCAWA,cAACU,EAAA,EAAD,CACEC,QACEf,IAAaT,EAASkB,OAAU,YAAgB,WAElDO,QAAS,kBAAMf,EAAYD,IAAaT,EAASkB,OAC5ClB,EAASQ,KACTR,EAASkB,SANhB,4BAWA,cAACK,EAAA,EAAD,CACEC,QACElB,EAAc,YAAgB,WAEhCmB,QAAS,kBAAMlB,GAAYD,IAJ7B,qBASA,cAACiB,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAS,WACPf,EAAYV,EAASQ,MACrBD,GAAW,IAJf,mBAUA,oBAAIe,UAAU,QAAd,SACGX,EAAMe,KAAI,SAACC,GAAD,OACT,oBACEL,UAAU,cADZ,SAIGK,GAFIA,WAtDb,cAACJ,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,kBAAMpB,GAAW,IAF5B,sBC1DVuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dc029042.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Button from '@mui/material/Button';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  LENGTH,\n  ALPHABET,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <Button\n            variant=\"contained\"\n            onClick={() => setStarted(true)}\n          >\n            Start\n          </Button>\n        )\n        : (\n          <>\n            <Button\n              variant={\n                sortType === SortType.ALPHABET ? ('contained') : ('outlined')\n              }\n              onClick={() => setSortType(sortType === SortType.ALPHABET\n                ? (SortType.NONE)\n                : (SortType.ALPHABET))}\n            >\n              Sort alphabetically\n            </Button>\n\n            <Button\n              variant={\n                sortType === SortType.LENGTH ? ('contained') : ('outlined')\n              }\n              onClick={() => setSortType(sortType === SortType.LENGTH\n                ? (SortType.NONE)\n                : (SortType.LENGTH))}\n            >\n              Sort by length\n            </Button>\n\n            <Button\n              variant={\n                isReversed ? ('contained') : ('outlined')\n              }\n              onClick={() => setReverse(!isReversed)}\n            >\n              Reverse\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReverse(false);\n              }}\n            >\n              Reset\n            </Button>\n\n            <ul className=\"Goods\">\n              {goods.map((good) => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}